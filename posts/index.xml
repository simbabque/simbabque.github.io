<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Julien's tech(ish) blog</title><link>https://simbabque.github.io/posts/</link><description>Recent content in Posts on Julien's tech(ish) blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Sun, 16 Oct 2022 19:00:00 +0100</lastBuildDate><atom:link href="https://simbabque.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>A Github Workflow guide for CPAN modules</title><link>https://simbabque.github.io/posts/github-workflow-guide-for-modules/</link><pubDate>Sun, 16 Oct 2022 19:00:00 +0100</pubDate><guid>https://simbabque.github.io/posts/github-workflow-guide-for-modules/</guid><description>&lt;p>In my &lt;a href="posts/install-perl-version-depedencies-github-workflow/">previous post on special dependencies&lt;/a>I have already talked about &lt;a href="https://github.com/features/actions">Github Actions&lt;/a>. This is a recap on the toolingI mentioned in this talk, with a short guide on how to use it.&lt;/p>&lt;h1 id="introduction">Introduction&lt;/h1>&lt;p>Before you start, you should have a quick look at &lt;a href="https://docs.github.com/en/actions">the official documentation&lt;/a>for Github Actions. The &lt;a href="https://docs.github.com/en/actions/quickstart">quickstart guide&lt;/a> offers a good overview. Fundamentally,actions give you &lt;a href="https://en.wikipedia.org/wiki/Continuous_integration">Continuous integration&lt;/a> for free.That means you can have your module&amp;rsquo;s unit tests run for you on various different versions of Perl, on Linux, MacOS and Windows,whenever you push a commit or someone opens a pull request. This is very useful to make sure contributions don&amp;rsquo;t break your code,or to enforce certain coding guidelines such as requiring code to follow a specific &lt;a href="https://metacpan.org/dist/Perl-Tidy/view/bin/perltidy#Using-a-.perltidyrc-command-file">perltidyrc&lt;/a>.&lt;/p>&lt;p>A &lt;a href="https://docs.github.com/en/actions/using-workflows/about-workflows">&lt;em>workflow&lt;/em>&lt;/a> is defined in a &lt;em>workflow file&lt;/em>, which is a YAML file in your &lt;code>.github/workflows&lt;/code> directory. You can have several of these, they just have to have unique names.A workflow contains one or more &lt;a href="https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow">&lt;em>jobs&lt;/em>&lt;/a>. Each job gets run by a runner, and will be executed within its own container. Jobs can depend on other jobs, so you can do something like this:&lt;/p>&lt;div class="mermaid" align="center">flowchart LRA[Build the module] --> B[Test the module]&lt;/div>&lt;p>Jobs can be defined one at a time, or in &lt;a href="https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs">a &lt;em>matrix&lt;/em>&lt;/a>. This is a bit like a loop. You can define lists of variables, such as the operating system and the Perl version,and it will spawn variations of the job for each combination.&lt;/p>&lt;div class="mermaid" align="center">flowchart LRA[Build] --> B1[Test on Linux with Perl 5.8]A --> B2[Test on Linux with Perl 5.36]A --> B3[Test on Windows with Perl 5.8]A --> B4[Test on Windows with Perl 5.36]&lt;/div>&lt;p>A job consists of several steps, which are called &lt;em>actions&lt;/em>. This is where the real work happens. Github provides some of these out of the box, such as &lt;a href="https://github.com/marketplace/actions/checkout">checking out code from your repository&lt;/a>, &lt;a href="https://github.com/marketplace/actions/upload-a-build-artifact">storing&lt;/a> and &lt;a href="https://github.com/marketplace/actions/download-a-build-artifact">retrieving&lt;/a> a build artifact, or running shell commands. It is also possible to add tags or comments to PRs, or to close them automatically.&lt;/p>&lt;h1 id="using-perl-specific-workflow-tools">Using Perl-specific workflow tools&lt;/h1>&lt;p>There are various tools specifically for Perl that people in the community have built. These are actively maintained and are meant to make your life easier.&lt;/p>&lt;p>Let&amp;rsquo;s start with a complex example. We&amp;rsquo;ll break it down afterwards. This is &lt;a href="https://github.com/libwww-perl/URI/blob/4a7a7294eb9b9b2416b3dd491227e4a8dcb45e1a/.github/workflows/dzil-build-and-test.yml">the current workflow for the URI module&lt;/a>. Here it is in full. I will run through the whole thing step by step below.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1&lt;/span>&lt;span class="lnt"> 2&lt;/span>&lt;span class="lnt"> 3&lt;/span>&lt;span class="lnt"> 4&lt;/span>&lt;span class="lnt"> 5&lt;/span>&lt;span class="lnt"> 6&lt;/span>&lt;span class="lnt"> 7&lt;/span>&lt;span class="lnt"> 8&lt;/span>&lt;span class="lnt"> 9&lt;/span>&lt;span class="lnt"> 10&lt;/span>&lt;span class="lnt"> 11&lt;/span>&lt;span class="lnt"> 12&lt;/span>&lt;span class="lnt"> 13&lt;/span>&lt;span class="lnt"> 14&lt;/span>&lt;span class="lnt"> 15&lt;/span>&lt;span class="lnt"> 16&lt;/span>&lt;span class="lnt"> 17&lt;/span>&lt;span class="lnt"> 18&lt;/span>&lt;span class="lnt"> 19&lt;/span>&lt;span class="lnt"> 20&lt;/span>&lt;span class="lnt"> 21&lt;/span>&lt;span class="lnt"> 22&lt;/span>&lt;span class="lnt"> 23&lt;/span>&lt;span class="lnt"> 24&lt;/span>&lt;span class="lnt"> 25&lt;/span>&lt;span class="lnt"> 26&lt;/span>&lt;span class="lnt"> 27&lt;/span>&lt;span class="lnt"> 28&lt;/span>&lt;span class="lnt"> 29&lt;/span>&lt;span class="lnt"> 30&lt;/span>&lt;span class="lnt"> 31&lt;/span>&lt;span class="lnt"> 32&lt;/span>&lt;span class="lnt"> 33&lt;/span>&lt;span class="lnt"> 34&lt;/span>&lt;span class="lnt"> 35&lt;/span>&lt;span class="lnt"> 36&lt;/span>&lt;span class="lnt"> 37&lt;/span>&lt;span class="lnt"> 38&lt;/span>&lt;span class="lnt"> 39&lt;/span>&lt;span class="lnt"> 40&lt;/span>&lt;span class="lnt"> 41&lt;/span>&lt;span class="lnt"> 42&lt;/span>&lt;span class="lnt"> 43&lt;/span>&lt;span class="lnt"> 44&lt;/span>&lt;span class="lnt"> 45&lt;/span>&lt;span class="lnt"> 46&lt;/span>&lt;span class="lnt"> 47&lt;/span>&lt;span class="lnt"> 48&lt;/span>&lt;span class="lnt"> 49&lt;/span>&lt;span class="lnt"> 50&lt;/span>&lt;span class="lnt"> 51&lt;/span>&lt;span class="lnt"> 52&lt;/span>&lt;span class="lnt"> 53&lt;/span>&lt;span class="lnt"> 54&lt;/span>&lt;span class="lnt"> 55&lt;/span>&lt;span class="lnt"> 56&lt;/span>&lt;span class="lnt"> 57&lt;/span>&lt;span class="lnt"> 58&lt;/span>&lt;span class="lnt"> 59&lt;/span>&lt;span class="lnt"> 60&lt;/span>&lt;span class="lnt"> 61&lt;/span>&lt;span class="lnt"> 62&lt;/span>&lt;span class="lnt"> 63&lt;/span>&lt;span class="lnt"> 64&lt;/span>&lt;span class="lnt"> 65&lt;/span>&lt;span class="lnt"> 66&lt;/span>&lt;span class="lnt"> 67&lt;/span>&lt;span class="lnt"> 68&lt;/span>&lt;span class="lnt"> 69&lt;/span>&lt;span class="lnt"> 70&lt;/span>&lt;span class="lnt"> 71&lt;/span>&lt;span class="lnt"> 72&lt;/span>&lt;span class="lnt"> 73&lt;/span>&lt;span class="lnt"> 74&lt;/span>&lt;span class="lnt"> 75&lt;/span>&lt;span class="lnt"> 76&lt;/span>&lt;span class="lnt"> 77&lt;/span>&lt;span class="lnt"> 78&lt;/span>&lt;span class="lnt"> 79&lt;/span>&lt;span class="lnt"> 80&lt;/span>&lt;span class="lnt"> 81&lt;/span>&lt;span class="lnt"> 82&lt;/span>&lt;span class="lnt"> 83&lt;/span>&lt;span class="lnt"> 84&lt;/span>&lt;span class="lnt"> 85&lt;/span>&lt;span class="lnt"> 86&lt;/span>&lt;span class="lnt"> 87&lt;/span>&lt;span class="lnt"> 88&lt;/span>&lt;span class="lnt"> 89&lt;/span>&lt;span class="lnt"> 90&lt;/span>&lt;span class="lnt"> 91&lt;/span>&lt;span class="lnt"> 92&lt;/span>&lt;span class="lnt"> 93&lt;/span>&lt;span class="lnt"> 94&lt;/span>&lt;span class="lnt"> 95&lt;/span>&lt;span class="lnt"> 96&lt;/span>&lt;span class="lnt"> 97&lt;/span>&lt;span class="lnt"> 98&lt;/span>&lt;span class="lnt"> 99&lt;/span>&lt;span class="lnt">100&lt;/span>&lt;span class="lnt">101&lt;/span>&lt;span class="lnt">102&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dzil build and test&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;*&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">pull_request&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;*&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">schedule&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">cron&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;15 4 * * 0&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Every Sunday morning&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">workflow_dispatch&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">build-job&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build distribution&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-20.04&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">container&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">perldocker/perl-tester:5.34&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v3&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Run Tests&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">AUTHOR_TESTING&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">AUTOMATED_TESTING&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">EXTENDED_TESTING&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">RELEASE_TESTING&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">auto-build-and-test-dist&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/upload-artifact@v3&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build_dir&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build_dir&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ github.actor != &amp;#39;nektos/act&amp;#39; }}&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">coverage-job&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">needs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build-job&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-20.04&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">container&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">perldocker/perl-tester:5.34&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># codecov wants to be inside a Git repository&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/download-artifact@v3&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build_dir&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">.&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Install deps and test&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cpan-install-dist-deps &amp;amp;&amp;amp; test-dist&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">CODECOV_TOKEN&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{secrets.CODECOV_TOKEN}}&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">test-job&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">needs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build-job&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">strategy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">fail-fast&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">matrix&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">os&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">ubuntu-latest, macos-latest, windows-latest]&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">distribution&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">default, strawberry]&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">perl-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.8&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.10&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.12&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.14&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.16&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.18&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.20&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.22&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.24&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.26&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.28&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.30&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.32&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.34&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.36&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">exclude&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="nt">os: windows-latest, distribution&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">default }&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="nt">os: macos-latest, distribution&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">strawberry }&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="nt">os: ubuntu-latest, distribution&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">strawberry }&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="nt">distribution: strawberry, perl-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;5.8&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>}&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="nt">distribution: strawberry, perl-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;5.10&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>}&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="nt">distribution: strawberry, perl-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;5.12&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>}&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="nt">distribution: strawberry, perl-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;5.34&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>}&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="nt">distribution: strawberry, perl-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;5.36&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>}&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ matrix.os }}&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">on&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ matrix.os }} perl ${{ matrix.perl-version }}&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">set up perl&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">shogo82148/actions-setup-perl@v1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">perl-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ matrix.perl-version }}&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">distribution&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ matrix.distribution }}&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/download-artifact@v3&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build_dir&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">.&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">install deps using cpm&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">perl-actions/install-with-cpm@v1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cpanfile&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;cpanfile&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">args&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;--with-suggests --with-recommends --with-test&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">prove -lr t&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">AUTHOR_TESTING&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">RELEASE_TESTING&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>You can see the output of this workflow &lt;a href="https://github.com/libwww-perl/URI/actions/runs/3255037218">here&lt;/a> (if the output has been removed after some time, you can pick another one &lt;a href="https://github.com/libwww-perl/URI/actions">in the actions tab on github&lt;/a>). The diagram for this looks a bit like the following (simplified).&lt;/p>&lt;div class="mermaid" align="center">flowchart LRA[Build] --> Coveragesubgraph Test direction LR t1[on ubuntu-latest perl 5.8] t2[on ubuntu-latest perl 5.10] t3[...] t4[on ubuntu-latest perl 5.36] t5[on macos-latest perl 5.10] t6[...] t7[on macos-latest perl 5.36] t8[on windows-latest perl 5.14] t9[...] t10[on windows-latest perl 5.32]endA --> Test&lt;/div>&lt;p>Let&amp;rsquo;s run through step by step.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dzil build and test&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>You have to set the name of your workflow. If you have several, this is how you distinguish them. One reason to have more than one workflow would be to build documentation that gets stored into a different branch to be hosted &lt;a href="https://pages.github.com/">on github pages&lt;/a>, much like &lt;a href="https://github.com/simbabque/simbabque.github.io/blob/master/.github/workflows/gh-pages.yml">the (only) workflow for this blog&lt;/a>.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1&lt;/span>&lt;span class="lnt"> 2&lt;/span>&lt;span class="lnt"> 3&lt;/span>&lt;span class="lnt"> 4&lt;/span>&lt;span class="lnt"> 5&lt;/span>&lt;span class="lnt"> 6&lt;/span>&lt;span class="lnt"> 7&lt;/span>&lt;span class="lnt"> 8&lt;/span>&lt;span class="lnt"> 9&lt;/span>&lt;span class="lnt">10&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;*&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">pull_request&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;*&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">schedule&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">cron&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;15 4 * * 0&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Every Sunday morning&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">workflow_dispatch&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>The &lt;code>on&lt;/code> key controls when a workflow gets triggered. The options we&amp;rsquo;ve used here mean:&lt;/p>&lt;ul>&lt;li>run every time someone pushes to any branch in the repository (this is code you or your collaborators write),&lt;/li>&lt;li>someone opens a pull request (also when they push or force push more code to their PR&amp;rsquo;s branch),&lt;/li>&lt;li>automatically as a cronjob,&lt;/li>&lt;li>or with &lt;code>workflow_dispatch&lt;/code> when you click the button to run it against a branch of your choosing.&lt;/li>&lt;/ul>&lt;p>The &lt;code>schedule&lt;/code> makes sense if you want to rebuild something automatically, such as documentation, a blog or a static site, or if your tests rely on external websites that might go away. In most cases you probably do not want to use it. Dave Cross&amp;rsquo; website &lt;a href="https://perl.theplanetarium.org/">Planet Perl&lt;/a> heavily uses this feature to aggregate Perl blog posts from around the web several times a day.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>Next we have the &lt;code>jobs&lt;/code>. This workflow defines three different ones, as shown above in the diagram. The first one is for building the distribution. This is not so much about running the tests, but about building the module once, so that it can be used in subsequent tests on different platforms. That way we can save time on complicated build processes.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1&lt;/span>&lt;span class="lnt"> 2&lt;/span>&lt;span class="lnt"> 3&lt;/span>&lt;span class="lnt"> 4&lt;/span>&lt;span class="lnt"> 5&lt;/span>&lt;span class="lnt"> 6&lt;/span>&lt;span class="lnt"> 7&lt;/span>&lt;span class="lnt"> 8&lt;/span>&lt;span class="lnt"> 9&lt;/span>&lt;span class="lnt">10&lt;/span>&lt;span class="lnt">11&lt;/span>&lt;span class="lnt">12&lt;/span>&lt;span class="lnt">13&lt;/span>&lt;span class="lnt">14&lt;/span>&lt;span class="lnt">15&lt;/span>&lt;span class="lnt">16&lt;/span>&lt;span class="lnt">17&lt;/span>&lt;span class="lnt">18&lt;/span>&lt;span class="lnt">19&lt;/span>&lt;span class="lnt">20&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">build-job&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build distribution&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-20.04&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">container&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">perldocker/perl-tester:5.34&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v3&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Run Tests&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">AUTHOR_TESTING&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">AUTOMATED_TESTING&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">EXTENDED_TESTING&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">RELEASE_TESTING&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">auto-build-and-test-dist&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/upload-artifact@v3&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build_dir&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build_dir&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ github.actor != &amp;#39;nektos/act&amp;#39; }}&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>The build job in our example runs on a specific Ubuntu version, on a custom Docker container named &lt;a href="https://github.com/Perl/docker-perl-tester">perldocker&lt;/a>. It runs a specific Perl version that you chose in the &lt;code>image&lt;/code> (this one uses 5.34), as well as the OS you set in the &lt;code>runs-on&lt;/code> key. The container comes with a lot of different testing modules, CPAN clients such as &lt;a href="https://metacpan.org/dist/App-cpanminus/view/lib/App/cpanminus/fatscript.pm">cpanm&lt;/a> and &lt;a href="https://metacpan.org/dist/App-cpm/view/script/cpm">cpm&lt;/a> as well as spelling dictionaries and other useful stuff. This allows you to run most Perl related builds and tests pretty much out of the box, and cuts down on run time for individual jobs. The container is maintained by a group of volunteers from the Perl community, and lives in the same Github organisation as the Perl source code itself.&lt;/p>&lt;p>Once the container is set up, a number of steps are performed. The &lt;a href="https://github.com/marketplace/actions/checkout">&lt;code>actions/checkout@v3&lt;/code>&lt;/a> action gets your code from the GitHub repository the action is associated with, and puts it into a local directory that becomes the working directory for the rest of the run. For example, if the workflow is running for a pull request, it will get the code from there.&lt;/p>&lt;p>The second step has more details, as it&amp;rsquo;s not using a predefined action. A number of environment variables such as &lt;code>AUTHOR_TESTING&lt;/code> and &lt;code>RELEASE_TESTING&lt;/code> are set, before one of the scripts that come bundled with the Docker container are run. The &lt;code>auto-build-and-test-dist&lt;/code> script will install all build, test and runtime dependencies, build the distribution from source and run tests against it. The aforementioned environment variables are used by various tests that are included in the Dist::Zilla configuration of the module we are using as an example here. The &lt;code>auto-build-and-test-dist&lt;/code> script is bundled with the Perl docker container, but has its own dedicated repository called &lt;a href="https://github.com/perl-actions/ci-perl-tester-helpers">perl-actions/ci-perl-tester-helpers&lt;/a>. At the time of writing (October 2022) is supports distributions using &lt;a href="https://metacpan.org/pod/Dist::Zilla">Dist::Zilla&lt;/a>, &lt;a href="https://metacpan.org/pod/Minilla">Minilla&lt;/a> and &lt;a href="https://metacpan.org/pod/Module::Build">Module::Build&lt;/a>.&lt;/p>&lt;p>The final step is another official action provided by GitHub &lt;a href="https://github.com/marketplace/actions/upload-a-build-artifact">that stores a build artifact&lt;/a> from one job so that it can be used by subsequent jobs in the same workflow. It needs to be given a &lt;code>name&lt;/code> (think a cache key) and &lt;code>path&lt;/code> to the file to store as its arguments, which are typically passed into actions using the &lt;code>with&lt;/code> key. The &lt;code>if&lt;/code> key allows a step to be run conditionally. In this case, a variable inside the runner is evaluated using &lt;code>${{ ... }}&lt;/code>. We&amp;rsquo;re checking whether the thing running this workflow is &lt;a href="https://github.com/nektos/act">a tool called &lt;code>act&lt;/code>&lt;/a> (not the YAPC website). It allows you to test workflows locally on your computer without pushing lots of commits or force-pushing changes every time you make a change to the workflow file. It is handy, but you don&amp;rsquo;t need this condition unless you plan to use &lt;code>act&lt;/code>.&lt;/p>&lt;p>This brings us to the end of the build job. We now have a distribution stored and ready to be used in the subsequent jobs.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1&lt;/span>&lt;span class="lnt"> 2&lt;/span>&lt;span class="lnt"> 3&lt;/span>&lt;span class="lnt"> 4&lt;/span>&lt;span class="lnt"> 5&lt;/span>&lt;span class="lnt"> 6&lt;/span>&lt;span class="lnt"> 7&lt;/span>&lt;span class="lnt"> 8&lt;/span>&lt;span class="lnt"> 9&lt;/span>&lt;span class="lnt">10&lt;/span>&lt;span class="lnt">11&lt;/span>&lt;span class="lnt">12&lt;/span>&lt;span class="lnt">13&lt;/span>&lt;span class="lnt">14&lt;/span>&lt;span class="lnt">15&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">coverage-job&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">needs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build-job&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-20.04&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">container&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">perldocker/perl-tester:5.34&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># codecov wants to be inside a Git repository&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/download-artifact@v3&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build_dir&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">.&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Install deps and test&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cpan-install-dist-deps &amp;amp;&amp;amp; test-dist&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">CODECOV_TOKEN&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{secrets.CODECOV_TOKEN}}&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>Although we&amp;rsquo;re going to run a whole array of tests on different platforms later on in the workflow file, we don&amp;rsquo;t want to collect test coverage data for all of them. Instead, we have defined a dedicated test run just to collect coverage data using &lt;a href="https://about.codecov.io/">codecov.io&lt;/a>, which is free for Open Source projects. You need to create an account, which you can conveniently do with your GitHub login, and you also need to sync your repositories and enable them inside of codecov. You will be given a token, which you need to store in your GitHub repository&amp;rsquo;s settings under Secrets inside Actions. In this example, we&amp;rsquo;ve named it &lt;code>CODECOV_TOKEN&lt;/code>.&lt;/p>&lt;p>The job again runs on the Perl docker container, and we&amp;rsquo;ve opted for Perl 5.34. Because we want to run this after the build job has finished, we set the &lt;code>needs&lt;/code> key to the name of that job.&lt;/p>&lt;p>Codecov has a bit of an oddity in that it needs to be inside a git repository, so we run a checkout, although we&amp;rsquo;re going to do just run the tests on the distribution built in the previous job. This is where the artifact comes in, which we now &lt;a href="https://github.com/marketplace/actions/download-a-build-artifact">retrieve using another predefined action&lt;/a>, again telling it the &lt;code>name&lt;/code> and the &lt;code>path&lt;/code> to put it in.&lt;/p>&lt;p>In the third step, we run two commands that both come with the Perl Docker container as part of the CI helpers repository.&lt;/p>&lt;p>&lt;code>cpan-install-dist-deps&lt;/code> will install the distribution&amp;rsquo;s dependencies into this container. We need to do that again because every job runs on a freshly spawned container, completely isolated from all the other jobs. The install script uses &lt;code>cpm&lt;/code> to install dependencies. At the time of writing, it needs either &lt;a href="https://metacpan.org/dist/Module-CPANfile/view/lib/cpanfile.pod">a &lt;code>cpanfile&lt;/code>&lt;/a> to be present, which is a limitation of &lt;code>cpm&lt;/code>, or for the distribution to be built using Module::Build.&lt;/p>&lt;p>Once that has finishes successfully, the &lt;code>test-dist&lt;/code> script is run, which will execute tests. It looks for various environment variables, and will enable different types of tests depending on which ones are present. If it finds the &lt;code>CODECOV_TOKEN&lt;/code> environment variable, it will use &lt;a href="https://metacpan.org/pod/Devel::Cover">Devel::Cover&lt;/a> to capture test coverage data and report it to &lt;a href="https://about.codecov.io/">codecov.io&lt;/a> using &lt;a href="https://metacpan.org/pod/Devel::Cover::Report::Codecov">Devel::Cover::Report::Codecov&lt;/a>. Note that this also works for &lt;a href="https://coveralls.io/">coveralls.io&lt;/a>, which is a similar service that is also free for Open Source Software.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1&lt;/span>&lt;span class="lnt"> 2&lt;/span>&lt;span class="lnt"> 3&lt;/span>&lt;span class="lnt"> 4&lt;/span>&lt;span class="lnt"> 5&lt;/span>&lt;span class="lnt"> 6&lt;/span>&lt;span class="lnt"> 7&lt;/span>&lt;span class="lnt"> 8&lt;/span>&lt;span class="lnt"> 9&lt;/span>&lt;span class="lnt">10&lt;/span>&lt;span class="lnt">11&lt;/span>&lt;span class="lnt">12&lt;/span>&lt;span class="lnt">13&lt;/span>&lt;span class="lnt">14&lt;/span>&lt;span class="lnt">15&lt;/span>&lt;span class="lnt">16&lt;/span>&lt;span class="lnt">17&lt;/span>&lt;span class="lnt">18&lt;/span>&lt;span class="lnt">19&lt;/span>&lt;span class="lnt">20&lt;/span>&lt;span class="lnt">21&lt;/span>&lt;span class="lnt">22&lt;/span>&lt;span class="lnt">23&lt;/span>&lt;span class="lnt">24&lt;/span>&lt;span class="lnt">25&lt;/span>&lt;span class="lnt">26&lt;/span>&lt;span class="lnt">27&lt;/span>&lt;span class="lnt">28&lt;/span>&lt;span class="lnt">29&lt;/span>&lt;span class="lnt">30&lt;/span>&lt;span class="lnt">31&lt;/span>&lt;span class="lnt">32&lt;/span>&lt;span class="lnt">33&lt;/span>&lt;span class="lnt">34&lt;/span>&lt;span class="lnt">35&lt;/span>&lt;span class="lnt">36&lt;/span>&lt;span class="lnt">37&lt;/span>&lt;span class="lnt">38&lt;/span>&lt;span class="lnt">39&lt;/span>&lt;span class="lnt">40&lt;/span>&lt;span class="lnt">41&lt;/span>&lt;span class="lnt">42&lt;/span>&lt;span class="lnt">43&lt;/span>&lt;span class="lnt">44&lt;/span>&lt;span class="lnt">45&lt;/span>&lt;span class="lnt">46&lt;/span>&lt;span class="lnt">47&lt;/span>&lt;span class="lnt">48&lt;/span>&lt;span class="lnt">49&lt;/span>&lt;span class="lnt">50&lt;/span>&lt;span class="lnt">51&lt;/span>&lt;span class="lnt">52&lt;/span>&lt;span class="lnt">53&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">test-job&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">needs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build-job&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">strategy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">fail-fast&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">matrix&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">os&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">ubuntu-latest, macos-latest, windows-latest]&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">distribution&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">default, strawberry]&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">perl-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.8&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.10&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.12&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.14&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.16&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.18&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.20&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.22&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.24&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.26&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.28&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.30&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.32&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.34&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.36&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">exclude&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="nt">os: windows-latest, distribution&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">default }&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="nt">os: macos-latest, distribution&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">strawberry }&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="nt">os: ubuntu-latest, distribution&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">strawberry }&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="nt">distribution: strawberry, perl-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;5.8&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>}&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="nt">distribution: strawberry, perl-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;5.10&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>}&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="nt">distribution: strawberry, perl-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;5.12&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>}&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="nt">distribution: strawberry, perl-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;5.34&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>}&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="nt">distribution: strawberry, perl-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;5.36&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>}&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ matrix.os }}&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">on&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ matrix.os }} perl ${{ matrix.perl-version }}&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">set up perl&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">shogo82148/actions-setup-perl@v1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">perl-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ matrix.perl-version }}&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">distribution&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ matrix.distribution }}&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/download-artifact@v3&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build_dir&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">.&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">install deps using cpm&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">perl-actions/install-with-cpm@v1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cpanfile&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;cpanfile&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">args&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;--with-suggests --with-recommends --with-test&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">prove -lr t&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">AUTHOR_TESTING&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">RELEASE_TESTING&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>The final part of the workflow file describes the big matrix test job. This short description of environment combinations will spawn a lot of different jobs that all run the same tests, enabling you to see very quickly whether changes to your code break on particular Perl versions, which is great for maintaining backwards compatibility, or to test something on an operating system you cannot run the tests on locally. The description looks mildly intimidating, but it is actually quite straight-forward.&lt;/p>&lt;p>Just like the coverage job, each of these jobs depends on the build job, as we will again use the build artifact.&lt;/p>&lt;p>The &lt;code>strategy&lt;/code> key is used &lt;a href="https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs">to define the &lt;code>matrix&lt;/code>&lt;/a>. Each key holding an array of values inside this &lt;code>matrix&lt;/code> is completely made up by us. We want to test across three different operating systems, Perl distribution types and Perl versions. The jobs will be combinations of these values. Because not all combinations make sense, some are &lt;code>excluded&lt;/code>. As you can see, we have listed all Perl stable versions (those are the ones with even numbers after the 5) going back to 5.08 and including the most recent one at the time of writing, 5.36.&lt;/p>&lt;p>We need to exclude combinations that make no sense:&lt;/p>&lt;ul>&lt;li>any combination with Windows and the default distribution,&lt;/li>&lt;li>both Mac OS and Linux with &lt;a href="https://strawberryperl.com/">Strawberry Perl&lt;/a>, which is for Windows,&lt;/li>&lt;li>Perl versions for which there is no Strawberry release.&lt;/li>&lt;/ul>&lt;p>The &lt;code>fail-fast&lt;/code> key in the &lt;code>strategy&lt;/code> makes the remaining jobs that have not run yet fail if one of the running ones fails. This saves resources and produces a failed test result faster.&lt;/p>&lt;p>You will notice that these jobs are not going to run on the Perl Docker container. Instead they use GitHub&amp;rsquo;s official standard containers, which explains the values for the &lt;code>os&lt;/code> matrix key. We don&amp;rsquo;t need any special build or test tools here, but rather want to install our own specific Perl versions for each job. The &lt;code>name&lt;/code> is a combination of the matrix values, so we can easily identify which job is for which environment.&lt;/p>&lt;p>The first step for each of these jobs is to set up a Perl environment. We use the community action &lt;a href="https://github.com/marketplace/actions/setup-perl-environment">shogo82148/actions-setup-perl&lt;/a> written by ICHINOSE Shogo. It takes the &lt;code>perl-version&lt;/code> and &lt;code>distribution&lt;/code> arguments which we have defined in our matrix. Each job will get a combination of these, accessed through the &lt;code>matrix.perl-version&lt;/code> and &lt;code>matrix.distribution&lt;/code> variables. The action will install the correct Perl version for us to use.&lt;/p>&lt;p>Once that is done, we download our build artifact as before, so we can get testing.&lt;/p></description></item><item><title>Installing Perl dependencies based on your Perl version in Github Actions</title><link>https://simbabque.github.io/posts/install-perl-version-depedencies-github-workflow/</link><pubDate>Thu, 23 Jun 2022 15:00:00 +0100</pubDate><guid>https://simbabque.github.io/posts/install-perl-version-depedencies-github-workflow/</guid><description>&lt;p>&lt;a href="https://github.com/features/actions">Github Actions&lt;/a> are great for running tests, especially to check if pull requests are breaking your build. You can easilyset up jobs for different operating systems and Perl version using the excellent tooling already available for Perl. I willlink some of these in the course of this post.&lt;/p>&lt;p>At work I ran into an issue where I had to temporarily overwrite the value behind an accessor in a Catalyst Context object (&lt;code>$c&lt;/code>).Think &lt;code>local $foo-&amp;gt;{bar}&lt;/code>, but for &lt;code>$foo-&amp;gt;bar&lt;/code>. There is no built-in way of doing that, so I made a module that is now on CPAN.It&amp;rsquo;s called &lt;a href="https://metacpan.org/pod/MooseX::LocalAttribute">MooseX::LocalAttribute&lt;/a>, but it works with all kinds of Perl objects, not just with Moose.&lt;/p>&lt;p>I included tests for all the object creation modules I could think of off the top of my head. There are quite a lot. While I thinkthat there are probably not many people who use &lt;a href="https://metacpan.org/pod/Mo">Mo&lt;/a> in production, &lt;a href="https://metacpan.org/pod/Moose">Moose&lt;/a>and &lt;a href="https://metacpan.org/pod/Moo">Moo&lt;/a> are of course much more prevalent.&lt;/p>&lt;p>But there is another one that&amp;rsquo;s quite popular now to help quickly make objects: &lt;a href="https://metacpan.org/pod/Mojolicious">Mojolicious&lt;/a>.It includes &lt;a href="https://metacpan.org/pod/Mojo::Base">Mojo::Base&lt;/a>, which gives youa very simple version of &lt;code>has&lt;/code>. Internally it&amp;rsquo;s also just a blessed hash reference with accessors, just like a Moo object. So of courseI wanted to support it.&lt;/p>&lt;p>That decision made me run into a problem with my test suite, which is basically the same set of test run for every type of object creationmodule that is installed. And of course my Github Action should run all of them, on as many Perl versions as possible. But the folks at Mojoliciousare very forward-thinking. At the time of writing, the lowest supported Perl version for Mojolicious is 5.16. But I want my module to work onPerl 5.08, as it doesn&amp;rsquo;t do anything modern at all. And Mojolicious is just a testing dependency for me. I am using &lt;a href="https://metacpan.org/pod/Test::Requires">Test::Requires&lt;/a>,so if one of the modules I want to test against is not installed, that test file simply skips.&lt;/p>&lt;p>A modern Perl module distribution typicall defines its dependencies in a &lt;a href="https://metacpan.org/dist/Module-CPANfile/view/lib/cpanfile.pod">cpanfile&lt;/a>.In my case, this &lt;a href="https://metacpan.org/pod/Dist::Zilla::Plugin::Prereqs::FromCPANfile">gets picked up by Dist::Zilla and turned into the META.json file&lt;/a>.You can specify different phases such as &lt;code>develop&lt;/code>, &lt;code>test&lt;/code>, &lt;code>build&lt;/code> and &lt;code>runtime&lt;/code>, as well as how badlyyour module needs a particular module. The default is &lt;code>requires&lt;/code>, which means you have to have it, but it can also &lt;code>recommends&lt;/code> or &lt;code>suggests&lt;/code> thingsthat you might want to install. More details on this can be found in &lt;a href="https://metacpan.org/pod/CPAN::Meta::Spec#Prereq-Spec">CPAN::Meta::Spec&lt;/a>.&lt;/p>&lt;p>I started out listing all of the things I could test against as &lt;code>recommends&lt;/code>. My cpanfile looked like this.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1&lt;/span>&lt;span class="lnt"> 2&lt;/span>&lt;span class="lnt"> 3&lt;/span>&lt;span class="lnt"> 4&lt;/span>&lt;span class="lnt"> 5&lt;/span>&lt;span class="lnt"> 6&lt;/span>&lt;span class="lnt"> 7&lt;/span>&lt;span class="lnt"> 8&lt;/span>&lt;span class="lnt"> 9&lt;/span>&lt;span class="lnt">10&lt;/span>&lt;span class="lnt">11&lt;/span>&lt;span class="lnt">12&lt;/span>&lt;span class="lnt">13&lt;/span>&lt;span class="lnt">14&lt;/span>&lt;span class="lnt">15&lt;/span>&lt;span class="lnt">16&lt;/span>&lt;span class="lnt">17&lt;/span>&lt;span class="lnt">18&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-perl" data-lang="perl">&lt;span class="line">&lt;span class="cl">&lt;span class="n">on&lt;/span> &lt;span class="s">&amp;#39;runtime&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="k">sub&lt;/span> &lt;span class="p">{&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">requires&lt;/span> &lt;span class="s">&amp;#39;perl&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s">&amp;#39;5.008&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">requires&lt;/span> &lt;span class="s">&amp;#39;Exporter&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">requires&lt;/span> &lt;span class="s">&amp;#39;Scope::Guard&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">on&lt;/span> &lt;span class="s">&amp;#39;test&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="k">sub&lt;/span> &lt;span class="p">{&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">requires&lt;/span> &lt;span class="s">&amp;#39;FindBin&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">requires&lt;/span> &lt;span class="s">&amp;#39;Test::Exception&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">requires&lt;/span> &lt;span class="s">&amp;#39;Test::More&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">requires&lt;/span> &lt;span class="s">&amp;#39;Test::Requires&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">recommends&lt;/span> &lt;span class="s">&amp;#39;Moose&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">recommends&lt;/span> &lt;span class="s">&amp;#39;Moo&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">recommends&lt;/span> &lt;span class="s">&amp;#39;Mo&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">recommends&lt;/span> &lt;span class="s">&amp;#39;Mouse&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">recommends&lt;/span> &lt;span class="s">&amp;#39;Class::Accessor&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">recommends&lt;/span> &lt;span class="s">&amp;#39;Mojolicious&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>And in my Github Action definition file, which is written in YAML and lives in the &lt;code>.github/workflows&lt;/code> folder, I had a matrix of different Perl versionsset up for each operating system. That makes three different jobs with a list of Perl versions to test against, resulting in a lot of jobs that wouldget run whenever a new commit or PR gets pushed. Here&amp;rsquo;s a simplified extract of it, showing most of the test job for Ubuntu. There are two more similarones for Mac and Windows.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1&lt;/span>&lt;span class="lnt"> 2&lt;/span>&lt;span class="lnt"> 3&lt;/span>&lt;span class="lnt"> 4&lt;/span>&lt;span class="lnt"> 5&lt;/span>&lt;span class="lnt"> 6&lt;/span>&lt;span class="lnt"> 7&lt;/span>&lt;span class="lnt"> 8&lt;/span>&lt;span class="lnt"> 9&lt;/span>&lt;span class="lnt">10&lt;/span>&lt;span class="lnt">11&lt;/span>&lt;span class="lnt">12&lt;/span>&lt;span class="lnt">13&lt;/span>&lt;span class="lnt">14&lt;/span>&lt;span class="lnt">15&lt;/span>&lt;span class="lnt">16&lt;/span>&lt;span class="lnt">17&lt;/span>&lt;span class="lnt">18&lt;/span>&lt;span class="lnt">19&lt;/span>&lt;span class="lnt">20&lt;/span>&lt;span class="lnt">21&lt;/span>&lt;span class="lnt">22&lt;/span>&lt;span class="lnt">23&lt;/span>&lt;span class="lnt">24&lt;/span>&lt;span class="lnt">25&lt;/span>&lt;span class="lnt">26&lt;/span>&lt;span class="lnt">27&lt;/span>&lt;span class="lnt">28&lt;/span>&lt;span class="lnt">29&lt;/span>&lt;span class="lnt">30&lt;/span>&lt;span class="lnt">31&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ubuntu-test-job&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">needs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build-job&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;ubuntu-20.04&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">strategy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">fail-fast&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">matrix&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">os&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">ubuntu-20.04]&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">perl-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.8&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.10&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.12&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># ...&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.32&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.34&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5.36&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">perl ${{ matrix.perl-version }} on ${{ matrix.os }}&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">set up perl&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">shogo82148/actions-setup-perl@v1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">perl-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ matrix.perl-version }}&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/download-artifact@v2&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build_dir&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">.&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">install deps using cpm&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">perl-actions/install-with-cpm@v1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cpanfile&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;cpanfile&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">args&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;--with-suggests --with-recommends --with-test&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">prove -lr t&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>I want the tests to run on all stable Perl releases starting at Perl 5.8, and all the way through to the current one, which is 5.36 atthe time of writing. The job depends on another job that has already run, which built a release. It downloads that release, unpacks it,and then installs dependencies using &lt;a href="https://metacpan.org/dist/App-cpm/view/script/cpm">&lt;code>cpm&lt;/code>&lt;/a> via&lt;a href="https://github.com/marketplace/actions/install-with-cpm">this handy action&lt;/a>, including all of the suggested and recommended modules.&lt;/p>&lt;p>And that is where the problem arises. Mojolicious cannot be installed on Perls lower than 5.16, so the job called &lt;em>install deps using cpm&lt;/em>fails, which means that whole run goes red.&lt;/p>&lt;p>But I still want to be able to test against all of the other modules on Perls 5.8, 5.10, 5.12 and 5.14. My test suite allows that. Ifit cannot load Mojolicious, it&amp;rsquo;ll just skip that test. So I needed to find a way to not install Mojolicious on these versions. But I didn&amp;rsquo;twant to list it explicitly in the workflow file. It should still get the dependencies dynamically from the cpanfile, and of course thatmust not mess with a user installing my module.&lt;/p>&lt;p>The solution seems fairly obvious once I had found it. It&amp;rsquo;s possible to make individual steps of a job only execute&lt;a href="https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idif">&lt;code>if&lt;/code> a condition is met&lt;/a>. You can dosomething like this:&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1&lt;/span>&lt;span class="lnt">2&lt;/span>&lt;span class="lnt">3&lt;/span>&lt;span class="lnt">4&lt;/span>&lt;span class="lnt">5&lt;/span>&lt;span class="lnt">6&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">install deps using cpm&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">matrix.perl-version == 5.14&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">perl-actions/install-with-cpm@v1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cpanfile&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;cpanfile&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">args&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;--with-suggests --with-recommends --with-test&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>But we also need a way to have Mojolicious be recognised as a special case. I did that by changing it from &lt;code>recommends&lt;/code> to &lt;code>suggests&lt;/code> inmy cpanfile, which make it less required. Most people will not install these soft requirements anyway, and especially not for test, so wecan safely do that.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1&lt;/span>&lt;span class="lnt"> 2&lt;/span>&lt;span class="lnt"> 3&lt;/span>&lt;span class="lnt"> 4&lt;/span>&lt;span class="lnt"> 5&lt;/span>&lt;span class="lnt"> 6&lt;/span>&lt;span class="lnt"> 7&lt;/span>&lt;span class="lnt"> 8&lt;/span>&lt;span class="lnt"> 9&lt;/span>&lt;span class="lnt">10&lt;/span>&lt;span class="lnt">11&lt;/span>&lt;span class="lnt">12&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-perl" data-lang="perl">&lt;span class="line">&lt;span class="cl">&lt;span class="n">on&lt;/span> &lt;span class="s">&amp;#39;test&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="k">sub&lt;/span> &lt;span class="p">{&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">requires&lt;/span> &lt;span class="s">&amp;#39;FindBin&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">requires&lt;/span> &lt;span class="s">&amp;#39;Test::Exception&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">requires&lt;/span> &lt;span class="s">&amp;#39;Test::More&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">requires&lt;/span> &lt;span class="s">&amp;#39;Test::Requires&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">recommends&lt;/span> &lt;span class="s">&amp;#39;Moose&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">recommends&lt;/span> &lt;span class="s">&amp;#39;Moo&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">recommends&lt;/span> &lt;span class="s">&amp;#39;Mo&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">recommends&lt;/span> &lt;span class="s">&amp;#39;Mouse&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">recommends&lt;/span> &lt;span class="s">&amp;#39;Class::Accessor&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">suggest&lt;/span> &lt;span class="s">&amp;#39;Mojolicious&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>We can also tell &lt;code>cpm&lt;/code> that we explicitly want to not install a particular type of dependency.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">args&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;--without-suggests --with-recommends --with-test&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>So now we need to tie this together. We can set up two different steps in the workflow, and only one will be executed.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1&lt;/span>&lt;span class="lnt"> 2&lt;/span>&lt;span class="lnt"> 3&lt;/span>&lt;span class="lnt"> 4&lt;/span>&lt;span class="lnt"> 5&lt;/span>&lt;span class="lnt"> 6&lt;/span>&lt;span class="lnt"> 7&lt;/span>&lt;span class="lnt"> 8&lt;/span>&lt;span class="lnt"> 9&lt;/span>&lt;span class="lnt">10&lt;/span>&lt;span class="lnt">11&lt;/span>&lt;span class="lnt">12&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">install deps using cpm - with Mojolicious&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">matrix.perl-version &amp;gt;= &amp;#34;5.16&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">perl-actions/install-with-cpm@v1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cpanfile&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;cpanfile&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">args&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;--without-suggests --with-recommends --with-test&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">install deps using cpm - without Mojolicious&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">matrix.perl-version &amp;lt; &amp;#34;5.16&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">perl-actions/install-with-cpm@v1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cpanfile&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;cpanfile&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">args&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;--with-suggests --with-recommends --with-test&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>This looks great. But it doesn&amp;rsquo;t work. &lt;a href="https://github.com/marketplace/actions/setup-perl-environment">The action we are using to set up Perl&lt;/a>needs the version numbers to be actual numbers, so &lt;code>5.8&lt;/code> is bigger than &lt;code>5.10&lt;/code> and &lt;code>5.36&lt;/code>. That&amp;rsquo;s a problem,because it will still install it for Perl 5.8, and that run will fail. So let&amp;rsquo;s be more specific.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1&lt;/span>&lt;span class="lnt"> 2&lt;/span>&lt;span class="lnt"> 3&lt;/span>&lt;span class="lnt"> 4&lt;/span>&lt;span class="lnt"> 5&lt;/span>&lt;span class="lnt"> 6&lt;/span>&lt;span class="lnt"> 7&lt;/span>&lt;span class="lnt"> 8&lt;/span>&lt;span class="lnt"> 9&lt;/span>&lt;span class="lnt">10&lt;/span>&lt;span class="lnt">11&lt;/span>&lt;span class="lnt">12&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">install deps using cpm - with Mojolicious&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">matrix.perl-version &amp;gt;= &amp;#34;5.16&amp;#34; &amp;amp;&amp;amp; matrix.perl-version != &amp;#34;5.8&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">perl-actions/install-with-cpm@v1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cpanfile&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;cpanfile&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">args&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;--without-suggests --with-recommends --with-test&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">install deps using cpm - without Mojolicious&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">matrix.perl-version &amp;lt; &amp;#34;5.16&amp;#34; || matrix.perl-version == &amp;#34;5.8&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">perl-actions/install-with-cpm@v1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cpanfile&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;cpanfile&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">args&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;--with-suggests --with-recommends --with-test&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>This works. It&amp;rsquo;s great, but if Mojolicious bump their Perl dependency to 5.18, we&amp;rsquo;ll have to change this six times (twice for each OS). Can we makeit more dynamic?&lt;/p>&lt;p>We can set an environment variable in the workflow at the very top. It will be available as &lt;code>env.MOJO_REQUIRED_VERSION&lt;/code> in all of the jobs.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1&lt;/span>&lt;span class="lnt">2&lt;/span>&lt;span class="lnt">3&lt;/span>&lt;span class="lnt">4&lt;/span>&lt;span class="lnt">5&lt;/span>&lt;span class="lnt">6&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">MOJO_REQUIRED_VERSION&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;5.16&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Bump this if Mojolicious increases their minimum Perl version&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># ...&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ubuntu-test-job&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># ...&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>Now we can refer to this variable throughout the jobs. This will repeat several times in the workflow file.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1&lt;/span>&lt;span class="lnt"> 2&lt;/span>&lt;span class="lnt"> 3&lt;/span>&lt;span class="lnt"> 4&lt;/span>&lt;span class="lnt"> 5&lt;/span>&lt;span class="lnt"> 6&lt;/span>&lt;span class="lnt"> 7&lt;/span>&lt;span class="lnt"> 8&lt;/span>&lt;span class="lnt"> 9&lt;/span>&lt;span class="lnt">10&lt;/span>&lt;span class="lnt">11&lt;/span>&lt;span class="lnt">12&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">install deps using cpm - with Mojolicious&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">matrix.perl-version &amp;gt;= env.MOJO_REQUIRED_VERSION &amp;amp;&amp;amp; matrix.perl-version != &amp;#39;5.8&amp;#39;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">perl-actions/install-with-cpm@v1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cpanfile&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;cpanfile&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">args&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;--with-suggests --with-recommends --with-test&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">install deps using cpm - without Mojolicious&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">matrix.perl-version &amp;lt; env.MOJO_REQUIRED_VERSION || matrix.perl-version == &amp;#39;5.8&amp;#39;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">perl-actions/install-with-cpm@v1&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cpanfile&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;cpanfile&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">args&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;--without-suggests --with-recommends --with-test&amp;#34;&lt;/span>&lt;span class="w">&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>In conclusion, while YAML development isn&amp;rsquo;t going to be my favourite next role, I can still apply some programming paradigms to these config files.&lt;/p></description></item><item><title>The Weekly Challenge 166: Github DWIM</title><link>https://simbabque.github.io/posts/weekly-challenge-166-github-copilot/</link><pubDate>Sun, 29 May 2022 20:00:00 +0100</pubDate><guid>https://simbabque.github.io/posts/weekly-challenge-166-github-copilot/</guid><description>&lt;p>I recently got an account for &lt;a href="https://copilot.github.com/">Github Copilot&lt;/a>. So let&amp;rsquo;s go and have some fun with it.&lt;/p>&lt;p>I have used it to write my entries for the &lt;a href="https://theweeklychallenge.org/blog/perl-weekly-challenge-166/">Weekly Challenge 166&lt;/a>. I am going to look at task 2 in this blog post. In a gist, you&amp;rsquo;re asked to print a table diff view of files in three directories. It turns out that properly describing the task is actually quite hard.&lt;/p>&lt;p>I&amp;rsquo;m doing this in &lt;a href="https://code.visualstudio.com/">Visual Studio Code&lt;/a>, with the Copilot extension. It prettty much just suggests code and you can accept it, or ask for something else.&lt;/p>&lt;p>&lt;img src="hello-world.gif" alt="Hello World in Perl">&lt;/p>&lt;p>Obviously the first thing I tried was to dump in the whole task description and hope for the best. Of course that did not work.&lt;/p>&lt;p>Let&amp;rsquo;s talk about assumptions for a second. I didn&amp;rsquo;t think getting the actual task done with Copilot would work. I did not even think it would produce sensible Perl code at all.&lt;/p>&lt;p>I tried to approach this as naively as possible. I didn&amp;rsquo;t think about the algorithm at all beforehand. I wanted to know how &amp;ldquo;smart&amp;rdquo; this thing really is. Can it replace us?&lt;/p>&lt;p>As I am recreating this for the blog post, I will end up with slightly different code as the one I&amp;rsquo;ve submitted as my entry. I think for this experiment that&amp;rsquo;s OK.&lt;/p>&lt;p>I&amp;rsquo;m going to use screen captures of Visual Studio Code where Copilot suggests stuff because that is much easier than writing down what I did and what it did.&lt;/p>&lt;h2 id="creating-the-directory-structure">Creating the directory structure&lt;/h2>&lt;p>Before we can begin, we need these three directories and the files. I asked it to make the first one for me. That went reasonably well.&lt;/p>&lt;p>&lt;img src="create-files.gif" alt="Creating the first directory">&lt;/p>&lt;p>This is cute, but not exactly what we need. Instead, I tried to be more explicit, and got this solution, which I&amp;rsquo;ve reindented to fit the blog post.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1&lt;/span>&lt;span class="lnt"> 2&lt;/span>&lt;span class="lnt"> 3&lt;/span>&lt;span class="lnt"> 4&lt;/span>&lt;span class="lnt"> 5&lt;/span>&lt;span class="lnt"> 6&lt;/span>&lt;span class="lnt"> 7&lt;/span>&lt;span class="lnt"> 8&lt;/span>&lt;span class="lnt"> 9&lt;/span>&lt;span class="lnt">10&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-perl" data-lang="perl">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># iterate over these files and directories:&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Arial.ttf Comic_Sans.ttf Georgia.ttf &lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Helvetica.ttf Impact.otf Verdana.ttf Old_Fonts/&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># create them in the temporary directory&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="k">my&lt;/span> &lt;span class="nv">$file&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="sx">qw(&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sx"> Arial.ttf Comic_Sans.ttf Georgia.ttf &lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sx"> Helvetica.ttf Impact.otf Verdana.ttf&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sx">)&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">$dir_a&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">child&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$file&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">touchpath&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>As we can see, &lt;code>Old_Fonts/&lt;/code> is missing. But it&amp;rsquo;s smart enough to help us with that. We just have to ask.&lt;/p>&lt;p>&lt;img src="create-files-there-it-is.gif" alt="Adding an empty line actually makes the missing folder show up">&lt;/p>&lt;p>Now all we need to do is repeat this two more times. This is now much easier. It seems to be quite context-aware.&lt;/p>&lt;p>&lt;img src="create-files-b.gif" alt="Creating directory b is much faster">&lt;/p>&lt;p>To make &lt;code>dir_c&lt;/code> we do the same thing, and it just appears.&lt;/p>&lt;p>Finally, we don&amp;rsquo;t want to keep these directories around after we&amp;rsquo;re done. So we need to delete them. Let&amp;rsquo;s ask Copilot to do that for us.&lt;/p>&lt;p>&lt;img src="cleanup.gif" alt="Deleting the directories">&lt;/p>&lt;h2 id="find-the-missing-files">Find the missing files&lt;/h2>&lt;p>This seemed easy. Too easy. Surely it cannot just write the code for us, can it? Let&amp;rsquo;s find out. We&amp;rsquo;re going to give it the brief from the challenge.&lt;/p>&lt;p>As a reminder, I&amp;rsquo;m recreating this for the blog post. I don&amp;rsquo;t know if Copilot remembers my first attempt. I&amp;rsquo;m doing this in a different directory, different git repository and different VS Code window. The code it produces is not what I got before.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1&lt;/span>&lt;span class="lnt">2&lt;/span>&lt;span class="lnt">3&lt;/span>&lt;span class="lnt">4&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-perl" data-lang="perl">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Given a few (three or more) directories (non-recursively), &lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># display a side-by-side difference of files that are &lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># missing from at least one of the directories. Do not &lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># display files that exist in every directory.&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>At this point, it doesn&amp;rsquo;t suggest anything. So let&amp;rsquo;s help it a little.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-perl" data-lang="perl">&lt;span class="line">&lt;span class="cl">&lt;span class="k">sub&lt;/span> &lt;span class="nf">find_missing_files&lt;/span> &lt;span class="p">{&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>The first suggestion it comes up with is this code.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1&lt;/span>&lt;span class="lnt"> 2&lt;/span>&lt;span class="lnt"> 3&lt;/span>&lt;span class="lnt"> 4&lt;/span>&lt;span class="lnt"> 5&lt;/span>&lt;span class="lnt"> 6&lt;/span>&lt;span class="lnt"> 7&lt;/span>&lt;span class="lnt"> 8&lt;/span>&lt;span class="lnt"> 9&lt;/span>&lt;span class="lnt">10&lt;/span>&lt;span class="lnt">11&lt;/span>&lt;span class="lnt">12&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-perl" data-lang="perl">&lt;span class="line">&lt;span class="cl">&lt;span class="k">sub&lt;/span> &lt;span class="nf">find_missing_files&lt;/span> &lt;span class="p">{&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">my&lt;/span> &lt;span class="nv">@dirs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">@_&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">my&lt;/span> &lt;span class="nv">@files&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="k">my&lt;/span> &lt;span class="nv">$dir&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">@dirs&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">my&lt;/span> &lt;span class="nv">$dir_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$dir&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">my&lt;/span> &lt;span class="nv">@dir_files&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$dir_path&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">children&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">push&lt;/span> &lt;span class="nv">@files&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">@dir_files&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">my&lt;/span> &lt;span class="nv">%files&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">map&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nv">$_&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">basename&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nv">@files&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">my&lt;/span> &lt;span class="nv">@missing_files&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">grep&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="nv">$files&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nv">$_&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nb">keys&lt;/span> &lt;span class="nv">%files&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nv">@missing_files&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>It doesn&amp;rsquo;t seem to know that we already have &lt;a href="https://metacpan.org/pod/Path::Tiny">Path::Tiny&lt;/a> objects. To be fair, that&amp;rsquo;s probably OK. There&amp;rsquo;s an &lt;code>@files&lt;/code> that exists outside of the directory loop. It sticks all files for each directory in to that array, and then makes a hash called &lt;code>%files&lt;/code> for a lookup table of file names. And then it checks if it&amp;rsquo;s forgotten any files. Ooops. The output of this is an empty list.&lt;/p>&lt;p>So that didn&amp;rsquo;t work out. Let&amp;rsquo;s be more explicit.&lt;/p>&lt;p>There seem to be several options to make Copilot do what you mean. Their examples show comments, function and variable names, and documentation. Let&amp;rsquo;s add a POD block and tell it what we want it to return. The comment above is still there.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1&lt;/span>&lt;span class="lnt"> 2&lt;/span>&lt;span class="lnt"> 3&lt;/span>&lt;span class="lnt"> 4&lt;/span>&lt;span class="lnt"> 5&lt;/span>&lt;span class="lnt"> 6&lt;/span>&lt;span class="lnt"> 7&lt;/span>&lt;span class="lnt"> 8&lt;/span>&lt;span class="lnt"> 9&lt;/span>&lt;span class="lnt">10&lt;/span>&lt;span class="lnt">11&lt;/span>&lt;span class="lnt">12&lt;/span>&lt;span class="lnt">13&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-perl" data-lang="perl">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">=head2 find_missing_files(@dirs)&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">Takes a list of L&amp;lt;Path::Tiny&amp;gt; objects and returns a hashref &lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">of directories with a list of filenames that do not exist &lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">in all directories each.&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> my $missing_files = find_missing_files(@dirs);&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> # $missing_files = {&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> # dir_a =&amp;gt; [qw(Comic_Sans.ttf Georgia.ttf Old_Fonts/)],&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> # dir_b =&amp;gt; [qw(Comic_Sans.ttf Courier_New.ttf Tahoma.ttf)],&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> # dir_c =&amp;gt; [qw(Courier_New.ttf Monaco.ttf)],&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">=cut&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>At this point, it&amp;rsquo;s worth looking at different options. I can cycle between suggestions with &lt;kbd>CTRL&lt;/kbd> + &lt;kbd>]&lt;/kbd>.&lt;/p>&lt;p>&lt;img src="find-missing-files.gif" alt="Two different suggestions for find_missing_files">&lt;/p>&lt;p>One of them returns the structure similar to what we asked for. The other one made lookup hashes instead. I decided to go for the first one. Note it now knows that the input is already Path::Tiny objects. Let&amp;rsquo;s look at the output.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1&lt;/span>&lt;span class="lnt"> 2&lt;/span>&lt;span class="lnt"> 3&lt;/span>&lt;span class="lnt"> 4&lt;/span>&lt;span class="lnt"> 5&lt;/span>&lt;span class="lnt"> 6&lt;/span>&lt;span class="lnt"> 7&lt;/span>&lt;span class="lnt"> 8&lt;/span>&lt;span class="lnt"> 9&lt;/span>&lt;span class="lnt">10&lt;/span>&lt;span class="lnt">11&lt;/span>&lt;span class="lnt">12&lt;/span>&lt;span class="lnt">13&lt;/span>&lt;span class="lnt">14&lt;/span>&lt;span class="lnt">15&lt;/span>&lt;span class="lnt">16&lt;/span>&lt;span class="lnt">17&lt;/span>&lt;span class="lnt">18&lt;/span>&lt;span class="lnt">19&lt;/span>&lt;span class="lnt">20&lt;/span>&lt;span class="lnt">21&lt;/span>&lt;span class="lnt">22&lt;/span>&lt;span class="lnt">23&lt;/span>&lt;span class="lnt">24&lt;/span>&lt;span class="lnt">25&lt;/span>&lt;span class="lnt">26&lt;/span>&lt;span class="lnt">27&lt;/span>&lt;span class="lnt">28&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-perl" data-lang="perl">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$VAR1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;dir_c&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">[&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;Courier_New.ttf&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;Verdana.ttf&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;Monaco.ttf&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;Impact.otf&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;Helvetica.ttf&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;Arial.ttf&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;dir_b&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">[&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;Courier_New.ttf&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;Verdana.ttf&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;Tahoma.ttf&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;Impact.otf&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;Helvetica.ttf&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;Comic_Sans.ttf&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;Arial.ttf&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;dir_a&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">[&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;Verdana.ttf&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;Georgia.ttf&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;Old_Fonts&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;Impact.otf&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;Helvetica.ttf&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;Comic_Sans.ttf&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#39;Arial.ttf&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>That does not look very correct at all. Maybe we need to be more explicit in what we ask for.&lt;/p>&lt;p>I&amp;rsquo;ve deleted the function body, and added some comments instead.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1&lt;/span>&lt;span class="lnt"> 2&lt;/span>&lt;span class="lnt"> 3&lt;/span>&lt;span class="lnt"> 4&lt;/span>&lt;span class="lnt"> 5&lt;/span>&lt;span class="lnt"> 6&lt;/span>&lt;span class="lnt"> 7&lt;/span>&lt;span class="lnt"> 8&lt;/span>&lt;span class="lnt"> 9&lt;/span>&lt;span class="lnt">10&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-perl" data-lang="perl">&lt;span class="line">&lt;span class="cl">&lt;span class="k">sub&lt;/span> &lt;span class="nf">find_missing_files&lt;/span> &lt;span class="p">{&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">my&lt;/span> &lt;span class="nv">@dirs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">@_&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">my&lt;/span> &lt;span class="nv">%missing_files&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># iterate directories&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># iterate files in each directory sorted by their filename&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># if the filename does not exists in all directories, add the &lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># filename to the hash of files for this directory&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>&lt;img src="find-missing-files-with-comments.gif" alt="Function with comments">&lt;/p>&lt;p>Well that is nice. I just ran it. It said &lt;code>$VAR1 = 0;&lt;/code>. There is no &lt;code>return&lt;/code> statement. But fear not, Copilot knew this. We just have to ask for it. On the next empty line, it suggests to add &lt;code>return \%missing_files;&lt;/code> for us.&lt;/p>&lt;p>I&amp;rsquo;m going to switch to &lt;a href="https://metacpan.org/pod/Data::Printer">Data::Printer&lt;/a> now, because that makes it easier to read.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1&lt;/span>&lt;span class="lnt"> 2&lt;/span>&lt;span class="lnt"> 3&lt;/span>&lt;span class="lnt"> 4&lt;/span>&lt;span class="lnt"> 5&lt;/span>&lt;span class="lnt"> 6&lt;/span>&lt;span class="lnt"> 7&lt;/span>&lt;span class="lnt"> 8&lt;/span>&lt;span class="lnt"> 9&lt;/span>&lt;span class="lnt">10&lt;/span>&lt;span class="lnt">11&lt;/span>&lt;span class="lnt">12&lt;/span>&lt;span class="lnt">13&lt;/span>&lt;span class="lnt">14&lt;/span>&lt;span class="lnt">15&lt;/span>&lt;span class="lnt">16&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-perl" data-lang="perl">&lt;span class="line">&lt;span class="cl">&lt;span class="o">\&lt;/span> &lt;span class="p">{&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dir_a&lt;/span> &lt;span class="p">[&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="s">&amp;#34;Georgia.ttf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="s">&amp;#34;Old_Fonts&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="s">&amp;#34;Comic_Sans.ttf&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dir_b&lt;/span> &lt;span class="p">[&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="s">&amp;#34;Courier_New.ttf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="s">&amp;#34;Tahoma.ttf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="s">&amp;#34;Comic_Sans.ttf&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dir_c&lt;/span> &lt;span class="p">[&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="s">&amp;#34;Courier_New.ttf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="s">&amp;#34;Monaco.ttf&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>This is pretty cool. It&amp;rsquo;s got all the files that were missing in at least one other directory. The code it has written is different from my original solution. I had a more explicit variable name &lt;code>%files_that_dont_exist_in_all_dirs_by_dir&lt;/code>, and the it&amp;rsquo;s made a slightly more compact function. Let&amp;rsquo;s see if it will do that again.&lt;/p>&lt;p>&lt;img src="find-missing-files-long-var.gif" alt="I&amp;amp;rsquo;ve replaced the variable name">&lt;/p>&lt;p>The output is still the same. Here&amp;rsquo;s the full code of the function so you can compare.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1&lt;/span>&lt;span class="lnt"> 2&lt;/span>&lt;span class="lnt"> 3&lt;/span>&lt;span class="lnt"> 4&lt;/span>&lt;span class="lnt"> 5&lt;/span>&lt;span class="lnt"> 6&lt;/span>&lt;span class="lnt"> 7&lt;/span>&lt;span class="lnt"> 8&lt;/span>&lt;span class="lnt"> 9&lt;/span>&lt;span class="lnt">10&lt;/span>&lt;span class="lnt">11&lt;/span>&lt;span class="lnt">12&lt;/span>&lt;span class="lnt">13&lt;/span>&lt;span class="lnt">14&lt;/span>&lt;span class="lnt">15&lt;/span>&lt;span class="lnt">16&lt;/span>&lt;span class="lnt">17&lt;/span>&lt;span class="lnt">18&lt;/span>&lt;span class="lnt">19&lt;/span>&lt;span class="lnt">20&lt;/span>&lt;span class="lnt">21&lt;/span>&lt;span class="lnt">22&lt;/span>&lt;span class="lnt">23&lt;/span>&lt;span class="lnt">24&lt;/span>&lt;span class="lnt">25&lt;/span>&lt;span class="lnt">26&lt;/span>&lt;span class="lnt">27&lt;/span>&lt;span class="lnt">28&lt;/span>&lt;span class="lnt">29&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-perl" data-lang="perl">&lt;span class="line">&lt;span class="cl">&lt;span class="k">sub&lt;/span> &lt;span class="nf">find_missing_files&lt;/span> &lt;span class="p">{&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">my&lt;/span> &lt;span class="nv">@dirs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">@_&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">my&lt;/span> &lt;span class="nv">%files_that_dont_exist_in_all_dirs_by_dir&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># iterate directories&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># iterate files in each directory sorted by their filename&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># if the filename does not exists in all directories, add the &lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># filename to the hash of files for this directory&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="k">my&lt;/span> &lt;span class="nv">$dir&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">@dirs&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">my&lt;/span> &lt;span class="nv">@files&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$dir&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">children&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sx">qr/\w+\.ttf/&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="k">my&lt;/span> &lt;span class="nv">$file&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">@files&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">my&lt;/span> &lt;span class="nv">$filename&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$file&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">basename&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">my&lt;/span> &lt;span class="nv">$exists_in_all_dirs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="k">my&lt;/span> &lt;span class="nv">$dir&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">@dirs&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">my&lt;/span> &lt;span class="nv">$file_in_dir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$dir&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">child&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$filename&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nv">$file_in_dir&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nb">exists&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">$exists_in_all_dirs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">last&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nv">$exists_in_all_dirs&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">push&lt;/span> &lt;span class="nv">@&lt;/span>&lt;span class="p">{&lt;/span> &lt;span class="nv">$files_that_dont_exist_in_all_dirs_by_dir&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nv">$dir&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="nv">$filename&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">\&lt;/span>&lt;span class="nv">%files_that_dont_exist_in_all_dirs_by_dir&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;h2 id="making-a-table">Making a table&lt;/h2>&lt;p>At this point, I am already quite impressed. But can we really make this into an ASCII table? Surely it cannot be that &amp;ldquo;smart&amp;rdquo;.&lt;/p>&lt;p>&lt;img src="my-missing-files.gif" alt="It knows how to call our function">&lt;/p>&lt;p>Right. Now we&amp;rsquo;ve got this data structure with the directories and the missing files. Nice. But what do we do now?&lt;/p>&lt;p>How about we ask it to make a table.&lt;/p>&lt;p>&lt;img src="make-a-table.gif" alt="We asked it to make a table">&lt;/p>&lt;p>Well, that was a bit underwhelming. It&amp;rsquo;s just produced the comments we wrote above, when we described the previous function, with a slightl modification.&lt;/p>&lt;p>Maybe we need to tell it we&amp;rsquo;re wrinting a function instead.&lt;/p>&lt;p>&lt;img src="function-make-table.gif" alt="First attempt at making a table">&lt;/p>&lt;p>This is&amp;hellip; interesting. It has assumed we can pass in &lt;code>$missing_files&lt;/code> to the new function. When I add a &lt;code>print make_table(&lt;/code> it also auto completes the variable name into the function call. Neat. However it errors, because it has remembered that we&amp;rsquo;ve got Path::Tiny, but not in that data structure. So there is no &lt;code>basename&lt;/code> on that &lt;code>$dir&lt;/code>, and it blows up.&lt;/p>&lt;pre tabindex="0">&lt;code>Can&amp;#39;t locate object method &amp;#34;basename&amp;#34; via package &amp;#34;dir_a&amp;#34; (perhaps you forgot to load &amp;#34;dir_a&amp;#34;?) at test.pl line 109.&lt;/code>&lt;/pre>&lt;p>So we need to be more explicit. I&amp;rsquo;ve tried a lot of different approaches for this. We&amp;rsquo;re only going to look at a few of them.&lt;/p>&lt;p>First of all, let&amp;rsquo;s not reinvent the wheel here. There are plenty of modules on CPAN to make text tables. I decided to use &lt;a href="https://metacpan.org/pod/Text::Table::Tiny">Text::Table::Tiny&lt;/a>, because it has an easy to use interface.&lt;/p>&lt;p>I have added &lt;code>use Text::Table::Tiny 'generate_table';&lt;/code> to the top of the file. Let&amp;rsquo;s see if that makes a difference to the suggestions we get.&lt;/p>&lt;p>&lt;img src="function-make-table-2.gif" alt="Second attempt at making a table, now with generate_table">&lt;/p>&lt;p>Well, this makes a difference. It knows that there is a &lt;code>generate_table&lt;/code> function imported. But it doesn&amp;rsquo;t know the API behind it, so it&amp;rsquo;s passing in an array. Here is the code it&amp;rsquo;s generated.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1&lt;/span>&lt;span class="lnt"> 2&lt;/span>&lt;span class="lnt"> 3&lt;/span>&lt;span class="lnt"> 4&lt;/span>&lt;span class="lnt"> 5&lt;/span>&lt;span class="lnt"> 6&lt;/span>&lt;span class="lnt"> 7&lt;/span>&lt;span class="lnt"> 8&lt;/span>&lt;span class="lnt"> 9&lt;/span>&lt;span class="lnt">10&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-perl" data-lang="perl">&lt;span class="line">&lt;span class="cl">&lt;span class="k">sub&lt;/span> &lt;span class="nf">make_table&lt;/span> &lt;span class="p">{&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">my&lt;/span> &lt;span class="nv">$missing_files&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">shift&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">my&lt;/span> &lt;span class="nv">@rows&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="k">my&lt;/span> &lt;span class="nv">$dir&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">sort&lt;/span> &lt;span class="nb">keys&lt;/span> &lt;span class="nv">%$missing_files&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">my&lt;/span> &lt;span class="nv">$dir_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$dir&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">basename&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">my&lt;/span> &lt;span class="nv">@files&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">sort&lt;/span> &lt;span class="nv">@&lt;/span>&lt;span class="p">{&lt;/span> &lt;span class="nv">$missing_files&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nv">$dir&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">};&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">push&lt;/span> &lt;span class="nv">@rows&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nv">$dir_name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">@files&lt;/span>&lt;span class="p">];&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">generate_table&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">@rows&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>We&amp;rsquo;ve told it to make a table, and it looks like that&amp;rsquo;s what it&amp;rsquo;s done. Again, it assumes the keys in &lt;code>$missing_files&lt;/code> are Path::Tiny objects, so that will error. And then Text::Table::Tiny will complain because it&amp;rsquo;s not got a &lt;code>rows&lt;/code> argument. So we have to be more explicit.&lt;/p>&lt;p>&lt;img src="function-make-table-3.gif" alt="Third attempt at making a table">&lt;/p>&lt;p>Ok. Well. It knows the directories are in the keys. But still not very helpful. We have to tell it what output we want.&lt;/p>&lt;p>I&amp;rsquo;ve written the following POD for the function. As you can see, this contains the data structure we also used for the previous function, as well as the table from the original challenge text.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1&lt;/span>&lt;span class="lnt"> 2&lt;/span>&lt;span class="lnt"> 3&lt;/span>&lt;span class="lnt"> 4&lt;/span>&lt;span class="lnt"> 5&lt;/span>&lt;span class="lnt"> 6&lt;/span>&lt;span class="lnt"> 7&lt;/span>&lt;span class="lnt"> 8&lt;/span>&lt;span class="lnt"> 9&lt;/span>&lt;span class="lnt">10&lt;/span>&lt;span class="lnt">11&lt;/span>&lt;span class="lnt">12&lt;/span>&lt;span class="lnt">13&lt;/span>&lt;span class="lnt">14&lt;/span>&lt;span class="lnt">15&lt;/span>&lt;span class="lnt">16&lt;/span>&lt;span class="lnt">17&lt;/span>&lt;span class="lnt">18&lt;/span>&lt;span class="lnt">19&lt;/span>&lt;span class="lnt">20&lt;/span>&lt;span class="lnt">21&lt;/span>&lt;span class="lnt">22&lt;/span>&lt;span class="lnt">23&lt;/span>&lt;span class="lnt">24&lt;/span>&lt;span class="lnt">25&lt;/span>&lt;span class="lnt">26&lt;/span>&lt;span class="lnt">27&lt;/span>&lt;span class="lnt">28&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-perl" data-lang="perl">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">=head2 make_table($missing_files_by_dir)&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">Takes a hashref of dirs, each containing a list of missing &lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">files and returns a L&amp;lt;Text::Table::Tiny&amp;gt; object.&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> my $table = make_table($missing_files_by_dir);&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">The input data looks like this:&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> &lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> $missing_files = {&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> dir_a =&amp;gt; [qw(Comic_Sans.ttf Georgia.ttf Old_Fonts/)],&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> dir_b =&amp;gt; [qw(Comic_Sans.ttf Courier_New.ttf Tahoma.ttf)],&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> dir_c =&amp;gt; [qw(Courier_New.ttf Monaco.ttf)],&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> }&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">The table has one column per directory, and one row per file. The rows are &lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">sorted by filename. If a file is missing from a directory, the cell is empty.&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> dir_a | dir_b | dir_c&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> -------------- | --------------- | ---------------&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> Comic_Sans.ttf | Comic_Sans.ttf |&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> | Courier_New.ttf | Courier_New.ttf&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> Georgia.ttf | |&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> | | Monaco.ttf&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> Old_Fonts/ | |&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> | Tahoma.ttf |&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">=cut&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>It suggests two different functions. The second one is much longer, and is quite interesting. It has made up a bunch of arguments for &lt;code>generate_table&lt;/code> that look quite sensible. It seems to try to reproduce the table from the POD with the lines on the inside, but not the border around it. It also doesn&amp;rsquo;t assume that the keys in the hash are Path::Tiny objects any more.&lt;/p>&lt;p>&lt;img src="function-make-table-pod.gif" alt="Fourth attempt at making a table">&lt;/p>&lt;p>Unfortunately, the code does not compile, because almost all of the arguments to &lt;code>generate_table&lt;/code> are wrong. If I delete all the wrong ones, there is output. But it&amp;rsquo;s not very useful. Clearly it&amp;rsquo;s not found any files.&lt;/p>&lt;pre tabindex="0">&lt;code>++|++||||||++&lt;/code>&lt;/pre>&lt;p>It seems we have to be even more specific. When I first implemented this, the generated code struggled a lot getting the &lt;code>rows&lt;/code> argument right. In particular it did not want to believe me that this argument has to be an array reference, and that the header is included.&lt;/p>&lt;p>&lt;img src="function-make-table-array-ref.gif" alt="Fifth attempt at making a table">&lt;/p>&lt;p>Apart from an extra &lt;code>],&lt;/code> in the generated code, this actually runs. It&amp;rsquo;s a table with filenames.&lt;/p>&lt;pre tabindex="0">&lt;code>+-----------------+--+| Georgia.ttf | |+-----------------+--+| Comic_Sans.ttf | || Courier_New.ttf | || Tahoma.ttf | || Comic_Sans.ttf | || Courier_New.ttf | || Monaco.ttf | |+-----------------+--+&lt;/code>&lt;/pre>&lt;p>I am going to skip a few iteration steps now, where I tried to tell it exactly what I want the output to be in various different ways. None of them produced anything useful. Then I tried to describe the logic. I did say in the beginning I didn&amp;rsquo;t want to think about the algorithm, but I think I have no other choice.&lt;/p>&lt;p>&lt;img src="function-make-table-comments.gif" alt="Sixth attempt at making a table">&lt;/p>&lt;p>Oh no. It thinks there are Path::Tiny objects again. It&amp;rsquo;s not going to compile.&lt;/p>&lt;p>Let&amp;rsquo;s try something else first. The final output has one row per file, where all files in all directories are included. We can ask it to make that.&lt;/p>&lt;p>&lt;img src="function-make-table-uniq.gif" alt="Seventh attempt at making a table">&lt;/p>&lt;p>This is shiny. It&amp;rsquo;s come up with the &lt;code>uniq&lt;/code> and loaded &lt;a href="https://metacpan.org/pod/List::Util">List::Util&lt;/a> after we asked for it. The &lt;code>@files&lt;/code> look like this.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1&lt;/span>&lt;span class="lnt">2&lt;/span>&lt;span class="lnt">3&lt;/span>&lt;span class="lnt">4&lt;/span>&lt;span class="lnt">5&lt;/span>&lt;span class="lnt">6&lt;/span>&lt;span class="lnt">7&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-perl" data-lang="perl">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="s">&amp;#34;Comic_Sans.ttf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="s">&amp;#34;Courier_New.ttf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="s">&amp;#34;Georgia.ttf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="s">&amp;#34;Monaco.ttf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="s">&amp;#34;Tahoma.ttf&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>This is correct-ish. We&amp;rsquo;re missing the folder &lt;code>Old_Fonts&lt;/code>. I actually didn&amp;rsquo;t notice this earlier. Scroll up, and you will see that the code for &lt;code>find_missing_files&lt;/code> that we accepted filters &lt;code>.ttf&lt;/code> files out of the children. I&amp;rsquo;m going to remove that bit now. My original code did not have the filter. I suspect it is because I asked explicitly for &lt;em>files&lt;/em>.&lt;/p>&lt;p>The next thing we need to do is get the directories. We want one row per file, and one column per directory. It seems to be intent on using an explicit &lt;code>sort { $a cmp $b }&lt;/code> even though it doesn&amp;rsquo;t need that. I tried alternatives, but there were none. Ok, fine.&lt;/p>&lt;p>&lt;img src="function-make-table-dirs.gif" alt="Getting directories">&lt;/p>&lt;p>Let&amp;rsquo;s try again. I&amp;rsquo;ve rewritten the instructions inside the array ref.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1&lt;/span>&lt;span class="lnt">2&lt;/span>&lt;span class="lnt">3&lt;/span>&lt;span class="lnt">4&lt;/span>&lt;span class="lnt">5&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-perl" data-lang="perl">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># iterate the files&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># iterate the directories for each file&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># check if the file exists in the directory&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># if it does, add the filename to the row&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># if it doesn&amp;#39;t, add an empty cell to the row&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>&lt;img src="function-make-table-more-comments.gif" alt="Eighth attempt at making a table">&lt;/p>&lt;p>It&amp;rsquo;s still trying to do Path::Tiny objects. Maybe we have to help it a little. Let&amp;rsquo;s try to put the header row in first, maybe that&amp;rsquo;ll make it smarter.&lt;/p>&lt;p>&lt;img src="function-make-table-help-dirs.gif" alt="Ninth attempt at making a table">&lt;/p>&lt;p>That was&amp;hellip; painful. I&amp;rsquo;m not sure why it did not want to do what I meant here, but at least it&amp;rsquo;s worked it out in the end.&lt;/p>&lt;p>&lt;img src="function-make-hard-wtf.gif" alt="Tenth attempt at making a table">&lt;/p>&lt;p>The above gif shows nicely how stuff changes when you change some words. But it still won&amp;rsquo;t work. It now blows up with&lt;/p>&lt;pre tabindex="0">&lt;code>Can&amp;#39;t use string (&amp;#34;&amp;#34;) as an ARRAY ref while &amp;#34;strict refs&amp;#34; in use at /home/simbabque/perl5/perlbrew/perls/perl-5.28.0/lib/site_perl/5.28.0/Text/Table/Tiny.pm line 187.&lt;/code>&lt;/pre>&lt;p>That&amp;rsquo;s because we&amp;rsquo;re not returning an array reference from that &lt;code>map&lt;/code>. And the code inside the inner &lt;code>map&lt;/code> is probably not going to work either. I have no idea what that element 0 is supposed to be.&lt;/p>&lt;p>So let&amp;rsquo;s make a final set of changes. We&amp;rsquo;re going to tell it explicitly that we want an array reference. And we are going to try to convince it that there are file names, not objects.&lt;/p>&lt;p>The comments now look like this.&lt;/p>&lt;div class="highlight">&lt;div class="chroma">&lt;table class="lntable">&lt;tr>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1&lt;/span>&lt;span class="lnt">2&lt;/span>&lt;span class="lnt">3&lt;/span>&lt;span class="lnt">4&lt;/span>&lt;span class="lnt">5&lt;/span>&lt;span class="lnt">6&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td class="lntd">&lt;pre tabindex="0" class="chroma">&lt;code class="language-perl" data-lang="perl">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># iterate the file names&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># iterate the dir for each file&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># test all file names in the dir to see if the filename exists&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># if it does, add the filename to the row&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># if it doesn&amp;#39;t, add an empty cell to the row&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># return an array reference&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div>&lt;p>And now it suggests the following code.&lt;/p>&lt;p>&lt;img src="function-make-final.gif" alt="Eleventh attempt at making a table">&lt;/p>&lt;p>It&amp;rsquo;s got an array ref. It&amp;rsquo;s got &lt;code>grep&lt;/code> rather than method calls. This is promising. Let&amp;rsquo;s run it.&lt;/p>&lt;pre tabindex="0">&lt;code>+----------------+-----------------+-----------------+| dir_a | dir_b | dir_c |+----------------+-----------------+-----------------+| Comic_Sans.ttf | Comic_Sans.ttf | || | Courier_New.ttf | Courier_New.ttf || Georgia.ttf | | || | | Monaco.ttf || Old_Fonts | | || | Tahoma.ttf | |+----------------+-----------------+-----------------+&lt;/code>&lt;/pre>&lt;p>It&amp;rsquo;s working! We did it. Github Copilot has solved the challenge.&lt;/p>&lt;p>Again, this code is slightly different to the one I submitted as my solution to the challenge, but it is producing the same result. The full code of my submission can be found on &lt;a href="https://github.com/manwar/perlweeklychallenge-club/pull/6177/files#diff-e43fe814157d2875501e060523cfce34e590d8ebd8097663e7baaec9b3959e04">Github&lt;/a>. You can &lt;a href="test.pl">download the full code we wrote&lt;/a>.&lt;/p>&lt;h2 id="learnings">Learnings&lt;/h2>&lt;p>There are a few key takeaways from this challenge for me.&lt;/p>&lt;ul>&lt;li>Github Copilot is very powerful&lt;/li>&lt;li>but also really creepy&lt;/li>&lt;li>to use it properly, you need to be very explicit&lt;/li>&lt;li>not every suggestion makes sense&lt;/li>&lt;li>I don&amp;rsquo;t think it&amp;rsquo;s going to replace the algorithmic part of writing code any time soon&lt;/li>&lt;/ul>&lt;p>I always joke with my coworkers who work with machine learnings about throwing dice. In conclusion I can say that there are some really cool dice being thrown here.&lt;/p></description></item><item><title>Hello World</title><link>https://simbabque.github.io/posts/hello-world/</link><pubDate>Sun, 24 Apr 2022 14:48:28 +0100</pubDate><guid>https://simbabque.github.io/posts/hello-world/</guid><description>&lt;p>It works!&lt;/p></description></item></channel></rss>